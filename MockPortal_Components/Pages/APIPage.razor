@page "/appcatproducts"
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.IO;
@using System.Text.Json;
@using System.Text.Json.Nodes;
@inject HttpClient Http
@inject IJSRuntime JS
@implements IAsyncDisposable


<html class="js fontawesome-i2svg-active fontawesome-i2svg-complete" lang="en-US">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="noindex">
    <style type="text/css">svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.3333333333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}.svg-inline--fa .fa-primary{fill:var(--fa-primary-color,currentColor);opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa .fa-secondary{fill:var(--fa-secondary-color,currentColor);opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-primary{opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-secondary{opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary{fill:#000}.fad.fa-inverse{color:#fff}</style>

    <style>
        .container{
            position: relative;
        }
        .box{
            width: 100px;
            height: 100px;
            opacity: 0.9;
            position: absolute;
        }
        .circularbutton {
          text-align: center;
          float: left;
          font-size: 24px;
          min-width: 48px;
          margin-bottom: 8px;
          margin-right: 8px;
          margin-top:20px;
          padding: 0 8px 4px 8px;
          height: 64px;
          width: 64px;
          line-height: 32px;
          border-radius: 50%;
          background-color: maroon;
          color: white;
          z-index: 1;
          vertical-align: center;
        }
        .roundedbutton {
          text-align: center;
          float: left;
          font-size: 12px;
          min-width: 48px;
          margin-bottom: 8px;
          margin-right: 8px;
          padding: 0 8px 4px 8px;
          height: 32px;
          line-height: 32px;
          border-radius: 16px;
          background-color: #f1f1f1;
          top: 50px;
          width: 40px;
          left: 50px;
          z-index: 2;
        }

        grid-container {
          display: grid;
          grid-template-columns: 100px 1fr;
          grid-template-rows: repeat(3, 1fr);
          grid-gap: 10px;
          height: 400px;
        }

        grid_item {
          background-color: aqua;
          display: flex;
          justify-content: center;
          align-items: center;
          font-size: 1.5em;
        }

        .grid {
          display: grid;
          grid-gap: 10px;
          grid-template-columns: 150px 1fr;
          grid-template-rows: 1fr 1fr 1fr;
          grid-template-areas: "a" "a" "a";
        }

        .grid__thing {
          background-color: rebeccapurple;
        }

        .a {
          grid-area: a;
        }

        /*img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }*/
    </style>

  </head>
  <body class="layout--tag  posts-tagged-with-uxui">
    <section class="content-container">
      <div class="container">
        <h1 style="margin-bottom: 32px;">Application catalogue products</h1>
          <h2 style="margin-bottom: 24px;">How to use the application catalogue</h2>
          <h3 style="margin-bottom: 14px;">A primer on understanding, trialing and implementing the application catalogue (AppCat) from the Datahub.</h3>
        <div class="quick-link-container">
          <div class="quick-links">
            <!--{% include posts-pinned-limit.html %}-->
          </div>
        </div>

        <div class="entries-list">
          <article class="dev-link-container">  
            <div class="dev-info-container" role="contentinfo" tabindex="0">
              <div class="page-taxonomies">  
                <a class="page-taxonomy" data-title="API" href="/tag/api" title="Pages tagged api" rel="tag" alt="Pages tagged api" style="background-color: rgb(0, 127, 170); color: rgb(255, 255, 255);">API</a>
                <a class="page-taxonomy" data-title="DataHub" href="/tag/datahub" title="Pages tagged datahub" rel="tag" alt="Pages tagged datahub" style="background-color: rgb(125, 49, 76); color: rgb(255, 255, 255);">DataHub</a>
              </div>
              <!--<div>
                <button class="circular-button" aria-label="Circular Button">
                  At
                  <span class="page-taxonomy" aria-label="Round Button">Beta</span>
                </button>
                <button class="round-button">Co</button>
              </div>
              <div class="table">
                <div class="table-row">
                  <div class="table-cell">
                    <button class="round-button">At</button>
                  </div>
                  <div class="table-cell">Attendance/Roll marking</div>
                </div>
                <div class="table-row">
                  <div class="table-cell">
                    <button class="round-button">Bo</button>
                  </div>
                  <div class="table-cell">Booking systems</div>
                </div>
                <div class="table-row">
                  <div class="table-cell">
                    <button class="round-button">Co</button>
                  </div>
                  <div class="table-cell">Consent management</div>
                </div>
              </div>-->        
            </div>
            <div class="grid">
              <div class="grid__thing a">
                @* <div class="container"> *@
                  @* <div class="box"> *@
                  <div class="container circularbutton roundedbutton">At</div>
                  @* <div class="roundedbutton">Beta</div> *@
                @* </div> *@
                @* </div> *@
              </div>
              <div class="grid__thing">
                @* <div class="container">
                  <div class="box circularbutton">A1</div>
                  <div class="box roundedbutton">Beta</div>
                </div> *@
              </div>
              <div class="grid__thing">
                <div class="container">
                  @* <div class="box"> *@
                  <div class="circularbutton">A2</div>
                  <div class="roundedbutton">Beta</div>
                </div>
                @* </div> *@
              </div>
              <div class="grid__thing">
                @* <div class="container">
                  <div class="box circularbutton">A3</div>
                  <div class="box roundedbutton">Beta</div>
                </div> *@
              </div>
              <div class="grid__thing">
                <div class="container">
                  @* <div class="box"> *@
                  <div class="circularbutton">A4</div>
                  @* <div class="box roundedbutton">Beta</div> *@
                </div>
                @* </div> *@
              </div>
              <div class="grid__thing">
                @* <div class="container">
                  <div class="box circularbutton">A5</div>
                  <div class="box roundedbutton">Beta</div>
                </div> *@
              </div>
            </div>

@* <div class="container">
                  <div class="box circularbutton">Bo</div>
                  <div class="box roundedbutton">Beta</div>
                </div> *@

@* <div class="container">
                  <div class="box circularbutton">Cw</div>
                  <div class="box roundedbutton">Beta</div>
                </div> *@


            @* <div class="container">
                <div class="box circularbutton">At</div>
                <div class="box roundedbutton">Beta</div>
            </div> *@

          </article>
          @* <grid-container>
            <grid_item>A</grid_item>
            <grid_item>B</grid_item>
            <grid_item>C</grid_item>
            <grid_item>D</grid_item>
            <grid_item>E</grid_item>
            <grid_item>F</grid_item>
          </grid-container> *@
        </div>
      </div>
      
    </section>
  </body>
</html>

@code {

    private string selectedItem;

    private List<Item> SelectedValues = new List<Item>();

    private List<Item> SelectedItems = new List<Item>();

    private string _valueToSet = "";
    private string _fileName = "";
    private string _folderName = "";
    private string _statusMessage = "";

    private string _results="";

    private string _errorMessage = "";

    public async ValueTask DisposeAsync()
    {
        /*if(JSModule.IsValueCreated)
        {
            await JSModule.Value.DisposeAsync();
        }*/
    }

    private class Item
    {
        public string Self { get; set; }
        public int Level { get; set; }
        public string Parent { get; set; }
    }

    private List<Item> _rootItem = new List<Item>();

    private Object _lock = new Object();


    
    bool initialised = false;
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitializedAsync");

        initialised = true;
        Console.WriteLine("OnInitializedAsync complete");            
    }

    private string[] decorationIds = new string[0];
}